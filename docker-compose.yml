services:
  contentdb:
    image: mysql:latest
    environment:
      MYSQL_DATABASE: contentservice
      MYSQL_USER: ruben
      MYSQL_ROOT_PASSWORD: ruben93
      MYSQL_PASSWORD: ruben93
    restart: always
    ports:
      - 54508:3306
    volumes:
      - ./db-init/schema-content.sql:/docker-entrypoint-initdb.d/init.sql
      - content_data:/var/lib/mysql

  userdb:
    image: mysql:latest
    environment:
      MYSQL_DATABASE: userservice
      MYSQL_USER: ruben
      MYSQL_ROOT_PASSWORD: ruben93
      MYSQL_PASSWORD: ruben93
    restart: always
    ports:
      - 54509:3306
    volumes:
      - ./db-init/schema-user.sql:/docker-entrypoint-initdb.d/init.sql
      - user_data:/var/lib/mysql

  notificationdb:
    image: mysql:latest
    environment:
      MYSQL_DATABASE: notificationservice
      MYSQL_USER: ruben
      MYSQL_ROOT_PASSWORD: ruben93
      MYSQL_PASSWORD: ruben93
    restart: always
    ports:
      - 54510:3306
    volumes:
      - ./db-init/schema-notification.sql:/docker-entrypoint-initdb.d/init.sql
      - notification_data:/var/lib/mysql

  adminerdb:
    image: adminer
    platform: linux/amd64
    restart: always
    ports:
      - 18080:8080

  web:
    build:
      context: ./web-service
      dockerfile: Dockerfile
    command: npm run dev -- --host
    ports:
      - "5173:5173"
    volumes:
      - ./web-service:/app
      - /app/node_modules
    stdin_open: true
    tty: true

  redis:
    container_name: redis-cache
    hostname: redis
    image: redis:latest
    ports:
      - "6379:6379"

  redis-insight:
    image: redis/redisinsight:latest
    ports:
      - 5540:5540

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  mailhog:
    image: mailhog/mailhog
    ports:
      - 8025:8025
      - 1025:1025

volumes:
  content_data:
  user_data:
  notification_data:
  rabbitmq_data:
